{
	"info": {
		"_postman_id": "013677a8-45d2-40a8-aa52-339081d4a49e",
		"name": "novo usuario - users",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27630415"
	},
	"item": [
		{
			"name": "auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.globals.set(\"Token\", JSON.parse(responseBody).token)\r",
							" \r",
							"pm.test('Status code is 200', () => {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							" \r",
							"pm.test(\"Verify token is true\", () => {\r",
							"    pm.expect(JSON.parse(responseBody)).to.have.property(\"token\")\r",
							"})\r",
							"\r",
							"pm.environment.set(\"Token\", JSON.parse(responseBody).token);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"mail\": \"{{mailQaCoders}}\",\r\n  \"password\": \"{{senhaQaCoders}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/login/",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"login",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "cadastro novo usuario",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"   const firstName = [ \"Maria\",\"João\",\"Ana\",\"Pedro\",\"Carla\",\"Lucas\",\"Mariana\",\"Paulo\",\"Camila\",\"Rafael\",\"Juliana\",\"Gustavo\",\"Larissa\",\"Fernando\",\"Amanda\",\"Diego\",\"Isabela\",\"Ricardo\",\"Natália\",\"Henrique\",\"Lívia\",\"Roberto\",\"Sofia\",\"Eduardo\",\"Vitória\",\"Fábio\",\"Mariana\",\"André\",\"Letícia\",\"Rodrigo\",\"Lara\",\"Guilherme\",\"Bianca\",\"Miguel\",\"Alice\",\"Leonardo\",\"Laura\",\"Daniel\",\"Beatriz\",\"Felipe\",\"Luiza\",\"Arthur\",\"Helena\",\"Gabriel\",\"Valentina\",\"Bernardo\",\"Sophia\",\"Vitor\",\"Clara\",\"Francisco\",\"Yasmin\",\"Enzo\",\"Isabel\",\"Isabella\",\"Lorenzo\",\"Joana\",\"Samuel\",\"Melissa\",\"Otávio\",\"Ana\",\"Breno\",\"Cecília\",\"Benjamin\",\"Luana\",\"Mariane\",\"Davi\",\"Nathália\",\"Raul\",\"Isadora\",\"Marcelo\",\"Luna\",\"Nicolas\",\"Laís\",\"Augusto\",\"Stella\",\"Ruan\",\"Gabriela\",\"Luciano\",\"Evelyn\",\"Thiago\",\"Lorena\",\"Vinícius\",\"Catarina\",\"Murilo\",\"Pietra\",\"Tomás\",\"Carolina\",\"Caio\",\"Manuela\",\"Emanuelly\",\"Lavinia\",\"Lucca\",\"Mirella\",\"Kevin\",\"Rebeca\",\"Anthony\",\"Júlia\"];\r",
							"  \r",
							"  const lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\"];\r",
							"\r",
							"const randomfirstName = firstName[Math.floor(Math.random() * firstName.length)];\r",
							"const randomlastName = lastName[Math.floor(Math.random() * lastName.length)];\r",
							"\r",
							"pm.environment.set(\"FirstName\", pm.variables.replaceIn(randomfirstName));\r",
							"pm.environment.set(\"LastName\", pm.variables.replaceIn(randomlastName));\r",
							"pm.environment.set(\"FullName\", pm.variables.replaceIn(randomfirstName + ' ' + randomlastName));\r",
							"\r",
							"// Função para gerar um e-mail aleatório\r",
							"\r",
							"const emailDomain = \"@dominio.com\"; // Você pode alterar o domínio conforme necessário\r",
							"const fullName = pm.environment.get(\"FullName\");\r",
							"\r",
							"// Remover espaços em branco e converter para minúsculas para usar como nome de usuário no e-mail\r",
							"const username = fullName.replace(/\\s+/g, '').toLowerCase();\r",
							"\r",
							"// Concatenar o nome de usuário com o domínio de e-mail\r",
							"const email = username + emailDomain;\r",
							"\r",
							"// Definir o endereço de e-mail na variável de ambiente \"Email\"\r",
							"pm.environment.set(\"Email\", email);\r",
							"\r",
							"// Função para gerar um CPF aleatório válido\r",
							"function generateRandomCPF() {\r",
							"    var cpf = '';\r",
							"    for (var i = 0; i < 9; i++) {\r",
							"        cpf += Math.floor(Math.random() * 10);\r",
							"    }\r",
							"\r",
							"    var sum = 0;\r",
							"    var weight = 10;\r",
							"    for (var i = 0; i < 9; i++) {\r",
							"        sum += parseInt(cpf.charAt(i)) * weight;\r",
							"        weight--;\r",
							"    }\r",
							"\r",
							"    var remainder = 11 - (sum % 11);\r",
							"    if (remainder == 10 || remainder == 11) {\r",
							"        remainder = 0;\r",
							"    }\r",
							"    cpf += remainder;\r",
							"\r",
							"    sum = 0;\r",
							"    weight = 11;\r",
							"    for (var i = 0; i < 10; i++) {\r",
							"        sum += parseInt(cpf.charAt(i)) * weight;\r",
							"        weight--;\r",
							"    }\r",
							"\r",
							"    remainder = 11 - (sum % 11);\r",
							"    if (remainder == 10 || remainder == 11) {\r",
							"        remainder = 0;\r",
							"    }\r",
							"    cpf += remainder;\r",
							"\r",
							"    return cpf;\r",
							"}\r",
							"\r",
							"// Gerar e definir um CPF aleatório na variável de ambiente \"CPF\"\r",
							"pm.environment.set(\"CPF\", generateRandomCPF());\r",
							"\r",
							"// Função para gerar uma senha aleatória\r",
							"function generateRandomPassword(length) {\r",
							"    var chars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+~`|}{[]:;?><,./-=\";\r",
							"    var password = '';\r",
							"    for (var i = 0; i < length; i++) {\r",
							"        password += chars.charAt(Math.floor(Math.random() * chars.length));\r",
							"    }\r",
							"    return password;\r",
							"}\r",
							"\r",
							"// Definir o comprimento desejado da senha\r",
							"var passwordLength = 10; // Você pode ajustar o comprimento conforme necessário\r",
							"\r",
							"// Gerar e definir uma senha aleatória na variável de ambiente \"Password\"\r",
							"pm.environment.set(\"Password\", generateRandomPassword(passwordLength));\r",
							"\r",
							"// Obter a senha gerada anteriormente da variável de ambiente\r",
							"var password = pm.environment.get(\"Password\");\r",
							"\r",
							"// Definir a confirmação de senha igual à senha gerada\r",
							"pm.environment.set(\"ConfirmPassword\", password);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201', () => {\r",
							"    pm.response.to.have.status(201);\r",
							"})\r",
							"\r",
							"pm.test(\"Verify the full name\", function () {\r",
							"    pm.expect(pm.environment.get('FullName')).to.eql(JSON.parse(responseBody).user.fullName);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"IdUser\", JSON.parse(responseBody).user._id);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"confirmPassword\": \"{{ConfirmPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/user/",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"user",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "login novo usuario",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.set(\"FullName\",pm.variables.replaceIn('{{$randomFullName}}'))\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{Password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/login/",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"login",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "fullName vazio",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"   const firstName = [ \"Maria\",\"João\",\"Ana\",\"Pedro\",\"Carla\",\"Lucas\",\"Mariana\",\"Paulo\",\"Camila\",\"Rafael\",\"Juliana\",\"Gustavo\",\"Larissa\",\"Fernando\",\"Amanda\",\"Diego\",\"Isabela\",\"Ricardo\",\"Natália\",\"Henrique\",\"Lívia\",\"Roberto\",\"Sofia\",\"Eduardo\",\"Vitória\",\"Fábio\",\"Mariana\",\"André\",\"Letícia\",\"Rodrigo\",\"Lara\",\"Guilherme\",\"Bianca\",\"Miguel\",\"Alice\",\"Leonardo\",\"Laura\",\"Daniel\",\"Beatriz\",\"Felipe\",\"Luiza\",\"Arthur\",\"Helena\",\"Gabriel\",\"Valentina\",\"Bernardo\",\"Sophia\",\"Vitor\",\"Clara\",\"Francisco\",\"Yasmin\",\"Enzo\",\"Isabel\",\"Isabella\",\"Lorenzo\",\"Joana\",\"Samuel\",\"Melissa\",\"Otávio\",\"Ana\",\"Breno\",\"Cecília\",\"Benjamin\",\"Luana\",\"Mariane\",\"Davi\",\"Nathália\",\"Raul\",\"Isadora\",\"Marcelo\",\"Luna\",\"Nicolas\",\"Laís\",\"Augusto\",\"Stella\",\"Ruan\",\"Gabriela\",\"Luciano\",\"Evelyn\",\"Thiago\",\"Lorena\",\"Vinícius\",\"Catarina\",\"Murilo\",\"Pietra\",\"Tomás\",\"Carolina\",\"Caio\",\"Manuela\",\"Emanuelly\",\"Lavinia\",\"Lucca\",\"Mirella\",\"Kevin\",\"Rebeca\",\"Anthony\",\"Júlia\"];\r",
							"  \r",
							"  const lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\"];\r",
							"\r",
							"const randomfirstName = firstName[Math.floor(Math.random() * firstName.length)];\r",
							"const randomlastName = lastName[Math.floor(Math.random() * lastName.length)];\r",
							"\r",
							"pm.environment.set(\"FirstName\", pm.variables.replaceIn(randomfirstName));\r",
							"pm.environment.set(\"LastName\", pm.variables.replaceIn(randomlastName));\r",
							"pm.environment.set(\"FullName\", pm.variables.replaceIn(randomfirstName + ' ' + randomlastName));\r",
							"\r",
							"// Função para gerar um e-mail aleatório\r",
							"\r",
							"const emailDomain = \"@dominio.com\"; // Você pode alterar o domínio conforme necessário\r",
							"const fullName = pm.environment.get(\"FullName\");\r",
							"\r",
							"// Remover espaços em branco e converter para minúsculas para usar como nome de usuário no e-mail\r",
							"const username = fullName.replace(/\\s+/g, '').toLowerCase();\r",
							"\r",
							"// Concatenar o nome de usuário com o domínio de e-mail\r",
							"const email = username + emailDomain;\r",
							"\r",
							"// Definir o endereço de e-mail na variável de ambiente \"Email\"\r",
							"pm.environment.set(\"Email\", email);\r",
							"\r",
							"// Função para gerar um CPF aleatório válido\r",
							"function generateRandomCPF() {\r",
							"    var cpf = '';\r",
							"    for (var i = 0; i < 9; i++) {\r",
							"        cpf += Math.floor(Math.random() * 10);\r",
							"    }\r",
							"\r",
							"    var sum = 0;\r",
							"    var weight = 10;\r",
							"    for (var i = 0; i < 9; i++) {\r",
							"        sum += parseInt(cpf.charAt(i)) * weight;\r",
							"        weight--;\r",
							"    }\r",
							"\r",
							"    var remainder = 11 - (sum % 11);\r",
							"    if (remainder == 10 || remainder == 11) {\r",
							"        remainder = 0;\r",
							"    }\r",
							"    cpf += remainder;\r",
							"\r",
							"    sum = 0;\r",
							"    weight = 11;\r",
							"    for (var i = 0; i < 10; i++) {\r",
							"        sum += parseInt(cpf.charAt(i)) * weight;\r",
							"        weight--;\r",
							"    }\r",
							"\r",
							"    remainder = 11 - (sum % 11);\r",
							"    if (remainder == 10 || remainder == 11) {\r",
							"        remainder = 0;\r",
							"    }\r",
							"    cpf += remainder;\r",
							"\r",
							"    return cpf;\r",
							"}\r",
							"\r",
							"// Gerar e definir um CPF aleatório na variável de ambiente \"CPF\"\r",
							"pm.environment.set(\"CPF\", generateRandomCPF());\r",
							"\r",
							"// Função para gerar uma senha aleatória\r",
							"function generateRandomPassword(length) {\r",
							"    var chars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+~`|}{[]:;?><,./-=\";\r",
							"    var password = '';\r",
							"    for (var i = 0; i < length; i++) {\r",
							"        password += chars.charAt(Math.floor(Math.random() * chars.length));\r",
							"    }\r",
							"    return password;\r",
							"}\r",
							"\r",
							"// Definir o comprimento desejado da senha\r",
							"var passwordLength = 10; // Você pode ajustar o comprimento conforme necessário\r",
							"\r",
							"// Gerar e definir uma senha aleatória na variável de ambiente \"Password\"\r",
							"pm.environment.set(\"Password\", generateRandomPassword(passwordLength));\r",
							"\r",
							"// Obter a senha gerada anteriormente da variável de ambiente\r",
							"var password = pm.environment.get(\"Password\");\r",
							"\r",
							"// Definir a confirmação de senha igual à senha gerada\r",
							"pm.environment.set(\"ConfirmPassword\", password);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 400', () => {\r",
							"    pm.response.to.have.status(400);\r",
							"})\r",
							"\r",
							"pm.test(\"error\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"O campo nome completo é obrigatório.\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"fullName\": \"\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"confirmPassword\": \"{{ConfirmPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/user/",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"user",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "fullName 101 caract",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"   const firstName = [ \"Maria\",\"João\",\"Ana\",\"Pedro\",\"Carla\",\"Lucas\",\"Mariana\",\"Paulo\",\"Camila\",\"Rafael\",\"Juliana\",\"Gustavo\",\"Larissa\",\"Fernando\",\"Amanda\",\"Diego\",\"Isabela\",\"Ricardo\",\"Natália\",\"Henrique\",\"Lívia\",\"Roberto\",\"Sofia\",\"Eduardo\",\"Vitória\",\"Fábio\",\"Mariana\",\"André\",\"Letícia\",\"Rodrigo\",\"Lara\",\"Guilherme\",\"Bianca\",\"Miguel\",\"Alice\",\"Leonardo\",\"Laura\",\"Daniel\",\"Beatriz\",\"Felipe\",\"Luiza\",\"Arthur\",\"Helena\",\"Gabriel\",\"Valentina\",\"Bernardo\",\"Sophia\",\"Vitor\",\"Clara\",\"Francisco\",\"Yasmin\",\"Enzo\",\"Isabel\",\"Isabella\",\"Lorenzo\",\"Joana\",\"Samuel\",\"Melissa\",\"Otávio\",\"Ana\",\"Breno\",\"Cecília\",\"Benjamin\",\"Luana\",\"Mariane\",\"Davi\",\"Nathália\",\"Raul\",\"Isadora\",\"Marcelo\",\"Luna\",\"Nicolas\",\"Laís\",\"Augusto\",\"Stella\",\"Ruan\",\"Gabriela\",\"Luciano\",\"Evelyn\",\"Thiago\",\"Lorena\",\"Vinícius\",\"Catarina\",\"Murilo\",\"Pietra\",\"Tomás\",\"Carolina\",\"Caio\",\"Manuela\",\"Emanuelly\",\"Lavinia\",\"Lucca\",\"Mirella\",\"Kevin\",\"Rebeca\",\"Anthony\",\"Júlia\"];\r",
							"  \r",
							"  const lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\"];\r",
							"\r",
							"const randomfirstName = firstName[Math.floor(Math.random() * firstName.length)];\r",
							"const randomlastName = lastName[Math.floor(Math.random() * lastName.length)];\r",
							"\r",
							"pm.environment.set(\"FirstName\", pm.variables.replaceIn(randomfirstName));\r",
							"pm.environment.set(\"LastName\", pm.variables.replaceIn(randomlastName));\r",
							"pm.environment.set(\"FullName\", pm.variables.replaceIn(randomfirstName + ' ' + randomlastName));\r",
							"\r",
							"// Função para gerar um e-mail aleatório\r",
							"\r",
							"const emailDomain = \"@dominio.com\"; // Você pode alterar o domínio conforme necessário\r",
							"const fullName = pm.environment.get(\"FullName\");\r",
							"\r",
							"// Remover espaços em branco e converter para minúsculas para usar como nome de usuário no e-mail\r",
							"const username = fullName.replace(/\\s+/g, '').toLowerCase();\r",
							"\r",
							"// Concatenar o nome de usuário com o domínio de e-mail\r",
							"const email = username + emailDomain;\r",
							"\r",
							"// Definir o endereço de e-mail na variável de ambiente \"Email\"\r",
							"pm.environment.set(\"Email\", email);\r",
							"\r",
							"// Função para gerar um CPF aleatório válido\r",
							"function generateRandomCPF() {\r",
							"    var cpf = '';\r",
							"    for (var i = 0; i < 9; i++) {\r",
							"        cpf += Math.floor(Math.random() * 10);\r",
							"    }\r",
							"\r",
							"    var sum = 0;\r",
							"    var weight = 10;\r",
							"    for (var i = 0; i < 9; i++) {\r",
							"        sum += parseInt(cpf.charAt(i)) * weight;\r",
							"        weight--;\r",
							"    }\r",
							"\r",
							"    var remainder = 11 - (sum % 11);\r",
							"    if (remainder == 10 || remainder == 11) {\r",
							"        remainder = 0;\r",
							"    }\r",
							"    cpf += remainder;\r",
							"\r",
							"    sum = 0;\r",
							"    weight = 11;\r",
							"    for (var i = 0; i < 10; i++) {\r",
							"        sum += parseInt(cpf.charAt(i)) * weight;\r",
							"        weight--;\r",
							"    }\r",
							"\r",
							"    remainder = 11 - (sum % 11);\r",
							"    if (remainder == 10 || remainder == 11) {\r",
							"        remainder = 0;\r",
							"    }\r",
							"    cpf += remainder;\r",
							"\r",
							"    return cpf;\r",
							"}\r",
							"\r",
							"// Gerar e definir um CPF aleatório na variável de ambiente \"CPF\"\r",
							"pm.environment.set(\"CPF\", generateRandomCPF());\r",
							"\r",
							"// Função para gerar uma senha aleatória\r",
							"function generateRandomPassword(length) {\r",
							"    var chars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+~`|}{[]:;?><,./-=\";\r",
							"    var password = '';\r",
							"    for (var i = 0; i < length; i++) {\r",
							"        password += chars.charAt(Math.floor(Math.random() * chars.length));\r",
							"    }\r",
							"    return password;\r",
							"}\r",
							"\r",
							"// Definir o comprimento desejado da senha\r",
							"var passwordLength = 10; // Você pode ajustar o comprimento conforme necessário\r",
							"\r",
							"// Gerar e definir uma senha aleatória na variável de ambiente \"Password\"\r",
							"pm.environment.set(\"Password\", generateRandomPassword(passwordLength));\r",
							"\r",
							"// Obter a senha gerada anteriormente da variável de ambiente\r",
							"var password = pm.environment.get(\"Password\");\r",
							"\r",
							"// Definir a confirmação de senha igual à senha gerada\r",
							"pm.environment.set(\"ConfirmPassword\", password);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 400', () => {\r",
							"    pm.response.to.have.status(400);\r",
							"})\r",
							"\r",
							"pm.test(\"error\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"O nome completo deve ter no máximo 100 caracteres.\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"fullName\": \"Cento Um Caracteres Cento Um Caracteres Cento Um Caracteres Cento Um Caracteres Cento Um Caracteres U\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"confirmPassword\": \"{{ConfirmPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/user/",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"user",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "fullName 100 caract Copy",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"   const firstName = [ \"Maria\",\"João\",\"Ana\",\"Pedro\",\"Carla\",\"Lucas\",\"Mariana\",\"Paulo\",\"Camila\",\"Rafael\",\"Juliana\",\"Gustavo\",\"Larissa\",\"Fernando\",\"Amanda\",\"Diego\",\"Isabela\",\"Ricardo\",\"Natália\",\"Henrique\",\"Lívia\",\"Roberto\",\"Sofia\",\"Eduardo\",\"Vitória\",\"Fábio\",\"Mariana\",\"André\",\"Letícia\",\"Rodrigo\",\"Lara\",\"Guilherme\",\"Bianca\",\"Miguel\",\"Alice\",\"Leonardo\",\"Laura\",\"Daniel\",\"Beatriz\",\"Felipe\",\"Luiza\",\"Arthur\",\"Helena\",\"Gabriel\",\"Valentina\",\"Bernardo\",\"Sophia\",\"Vitor\",\"Clara\",\"Francisco\",\"Yasmin\",\"Enzo\",\"Isabel\",\"Isabella\",\"Lorenzo\",\"Joana\",\"Samuel\",\"Melissa\",\"Otávio\",\"Ana\",\"Breno\",\"Cecília\",\"Benjamin\",\"Luana\",\"Mariane\",\"Davi\",\"Nathália\",\"Raul\",\"Isadora\",\"Marcelo\",\"Luna\",\"Nicolas\",\"Laís\",\"Augusto\",\"Stella\",\"Ruan\",\"Gabriela\",\"Luciano\",\"Evelyn\",\"Thiago\",\"Lorena\",\"Vinícius\",\"Catarina\",\"Murilo\",\"Pietra\",\"Tomás\",\"Carolina\",\"Caio\",\"Manuela\",\"Emanuelly\",\"Lavinia\",\"Lucca\",\"Mirella\",\"Kevin\",\"Rebeca\",\"Anthony\",\"Júlia\"];\r",
							"  \r",
							"  const lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\"];\r",
							"\r",
							"const randomfirstName = firstName[Math.floor(Math.random() * firstName.length)];\r",
							"const randomlastName = lastName[Math.floor(Math.random() * lastName.length)];\r",
							"\r",
							"pm.environment.set(\"FirstName\", pm.variables.replaceIn(randomfirstName));\r",
							"pm.environment.set(\"LastName\", pm.variables.replaceIn(randomlastName));\r",
							"pm.environment.set(\"FullName\", pm.variables.replaceIn(randomfirstName + ' ' + randomlastName));\r",
							"\r",
							"// Função para gerar um e-mail aleatório\r",
							"\r",
							"const emailDomain = \"@dominio.com\"; // Você pode alterar o domínio conforme necessário\r",
							"const fullName = pm.environment.get(\"FullName\");\r",
							"\r",
							"// Remover espaços em branco e converter para minúsculas para usar como nome de usuário no e-mail\r",
							"const username = fullName.replace(/\\s+/g, '').toLowerCase();\r",
							"\r",
							"// Concatenar o nome de usuário com o domínio de e-mail\r",
							"const email = username + emailDomain;\r",
							"\r",
							"// Definir o endereço de e-mail na variável de ambiente \"Email\"\r",
							"pm.environment.set(\"Email\", email);\r",
							"\r",
							"// Função para gerar um CPF aleatório válido\r",
							"function generateRandomCPF() {\r",
							"    var cpf = '';\r",
							"    for (var i = 0; i < 9; i++) {\r",
							"        cpf += Math.floor(Math.random() * 10);\r",
							"    }\r",
							"\r",
							"    var sum = 0;\r",
							"    var weight = 10;\r",
							"    for (var i = 0; i < 9; i++) {\r",
							"        sum += parseInt(cpf.charAt(i)) * weight;\r",
							"        weight--;\r",
							"    }\r",
							"\r",
							"    var remainder = 11 - (sum % 11);\r",
							"    if (remainder == 10 || remainder == 11) {\r",
							"        remainder = 0;\r",
							"    }\r",
							"    cpf += remainder;\r",
							"\r",
							"    sum = 0;\r",
							"    weight = 11;\r",
							"    for (var i = 0; i < 10; i++) {\r",
							"        sum += parseInt(cpf.charAt(i)) * weight;\r",
							"        weight--;\r",
							"    }\r",
							"\r",
							"    remainder = 11 - (sum % 11);\r",
							"    if (remainder == 10 || remainder == 11) {\r",
							"        remainder = 0;\r",
							"    }\r",
							"    cpf += remainder;\r",
							"\r",
							"    return cpf;\r",
							"}\r",
							"\r",
							"// Gerar e definir um CPF aleatório na variável de ambiente \"CPF\"\r",
							"pm.environment.set(\"CPF\", generateRandomCPF());\r",
							"\r",
							"// Função para gerar uma senha aleatória\r",
							"function generateRandomPassword(length) {\r",
							"    var chars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+~`|}{[]:;?><,./-=\";\r",
							"    var password = '';\r",
							"    for (var i = 0; i < length; i++) {\r",
							"        password += chars.charAt(Math.floor(Math.random() * chars.length));\r",
							"    }\r",
							"    return password;\r",
							"}\r",
							"\r",
							"// Definir o comprimento desejado da senha\r",
							"var passwordLength = 10; // Você pode ajustar o comprimento conforme necessário\r",
							"\r",
							"// Gerar e definir uma senha aleatória na variável de ambiente \"Password\"\r",
							"pm.environment.set(\"Password\", generateRandomPassword(passwordLength));\r",
							"\r",
							"// Obter a senha gerada anteriormente da variável de ambiente\r",
							"var password = pm.environment.get(\"Password\");\r",
							"\r",
							"// Definir a confirmação de senha igual à senha gerada\r",
							"pm.environment.set(\"ConfirmPassword\", password);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201', () => {\r",
							"    pm.response.to.have.status(201);\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"fullName\": \"Cem Caracteres Cem Caracteres Cem Caracteres Cem Caracteres Cem Caracteres Cem Caracteres Cem Caract\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"confirmPassword\": \"{{ConfirmPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/user/",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"user",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "listar usuario especifico",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"   const firstName = [ \"Maria\",\"João\",\"Ana\",\"Pedro\",\"Carla\",\"Lucas\",\"Mariana\",\"Paulo\",\"Camila\",\"Rafael\",\"Juliana\",\"Gustavo\",\"Larissa\",\"Fernando\",\"Amanda\",\"Diego\",\"Isabela\",\"Ricardo\",\"Natália\",\"Henrique\",\"Lívia\",\"Roberto\",\"Sofia\",\"Eduardo\",\"Vitória\",\"Fábio\",\"Mariana\",\"André\",\"Letícia\",\"Rodrigo\",\"Lara\",\"Guilherme\",\"Bianca\",\"Miguel\",\"Alice\",\"Leonardo\",\"Laura\",\"Daniel\",\"Beatriz\",\"Felipe\",\"Luiza\",\"Arthur\",\"Helena\",\"Gabriel\",\"Valentina\",\"Bernardo\",\"Sophia\",\"Vitor\",\"Clara\",\"Francisco\",\"Yasmin\",\"Enzo\",\"Isabel\",\"Isabella\",\"Lorenzo\",\"Joana\",\"Samuel\",\"Melissa\",\"Otávio\",\"Ana\",\"Breno\",\"Cecília\",\"Benjamin\",\"Luana\",\"Mariane\",\"Davi\",\"Nathália\",\"Raul\",\"Isadora\",\"Marcelo\",\"Luna\",\"Nicolas\",\"Laís\",\"Augusto\",\"Stella\",\"Ruan\",\"Gabriela\",\"Luciano\",\"Evelyn\",\"Thiago\",\"Lorena\",\"Vinícius\",\"Catarina\",\"Murilo\",\"Pietra\",\"Tomás\",\"Carolina\",\"Caio\",\"Manuela\",\"Emanuelly\",\"Lavinia\",\"Lucca\",\"Mirella\",\"Kevin\",\"Rebeca\",\"Anthony\",\"Júlia\"];\r",
							"  \r",
							"  const lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\"];\r",
							"\r",
							"const randomfirstName = firstName[Math.floor(Math.random() * firstName.length)];\r",
							"const randomlastName = lastName[Math.floor(Math.random() * lastName.length)];\r",
							"\r",
							"pm.environment.set(\"FirstName\", pm.variables.replaceIn(randomfirstName));\r",
							"pm.environment.set(\"LastName\", pm.variables.replaceIn(randomlastName));\r",
							"pm.environment.set(\"FullName\", pm.variables.replaceIn(randomfirstName + ' ' + randomlastName));\r",
							"\r",
							"// Função para gerar um e-mail aleatório\r",
							"\r",
							"const emailDomain = \"@dominio.com\"; // Você pode alterar o domínio conforme necessário\r",
							"const fullName = pm.environment.get(\"FullName\");\r",
							"\r",
							"// Remover espaços em branco e converter para minúsculas para usar como nome de usuário no e-mail\r",
							"const username = fullName.replace(/\\s+/g, '').toLowerCase();\r",
							"\r",
							"// Concatenar o nome de usuário com o domínio de e-mail\r",
							"const email = username + emailDomain;\r",
							"\r",
							"// Definir o endereço de e-mail na variável de ambiente \"Email\"\r",
							"pm.environment.set(\"Email\", email);\r",
							"\r",
							"// Função para gerar um CPF aleatório válido\r",
							"function generateRandomCPF() {\r",
							"    var cpf = '';\r",
							"    for (var i = 0; i < 9; i++) {\r",
							"        cpf += Math.floor(Math.random() * 10);\r",
							"    }\r",
							"\r",
							"    var sum = 0;\r",
							"    var weight = 10;\r",
							"    for (var i = 0; i < 9; i++) {\r",
							"        sum += parseInt(cpf.charAt(i)) * weight;\r",
							"        weight--;\r",
							"    }\r",
							"\r",
							"    var remainder = 11 - (sum % 11);\r",
							"    if (remainder == 10 || remainder == 11) {\r",
							"        remainder = 0;\r",
							"    }\r",
							"    cpf += remainder;\r",
							"\r",
							"    sum = 0;\r",
							"    weight = 11;\r",
							"    for (var i = 0; i < 10; i++) {\r",
							"        sum += parseInt(cpf.charAt(i)) * weight;\r",
							"        weight--;\r",
							"    }\r",
							"\r",
							"    remainder = 11 - (sum % 11);\r",
							"    if (remainder == 10 || remainder == 11) {\r",
							"        remainder = 0;\r",
							"    }\r",
							"    cpf += remainder;\r",
							"\r",
							"    return cpf;\r",
							"}\r",
							"\r",
							"// Gerar e definir um CPF aleatório na variável de ambiente \"CPF\"\r",
							"pm.environment.set(\"CPF\", generateRandomCPF());\r",
							"\r",
							"// Função para gerar uma senha aleatória\r",
							"function generateRandomPassword(length) {\r",
							"    var chars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+~`|}{[]:;?><,./-=\";\r",
							"    var password = '';\r",
							"    for (var i = 0; i < length; i++) {\r",
							"        password += chars.charAt(Math.floor(Math.random() * chars.length));\r",
							"    }\r",
							"    return password;\r",
							"}\r",
							"\r",
							"// Definir o comprimento desejado da senha\r",
							"var passwordLength = 10; // Você pode ajustar o comprimento conforme necessário\r",
							"\r",
							"// Gerar e definir uma senha aleatória na variável de ambiente \"Password\"\r",
							"pm.environment.set(\"Password\", generateRandomPassword(passwordLength));\r",
							"\r",
							"// Obter a senha gerada anteriormente da variável de ambiente\r",
							"var password = pm.environment.get(\"Password\");\r",
							"\r",
							"// Definir a confirmação de senha igual à senha gerada\r",
							"pm.environment.set(\"ConfirmPassword\", password);\r",
							"\r",
							"// Extrair o id do usuario criado\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', () => {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"confirmPassword\": \"{{ConfirmPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/user/{{IdUser}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"user",
						"{{IdUser}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "listar usuario",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"   const firstName = [ \"Maria\",\"João\",\"Ana\",\"Pedro\",\"Carla\",\"Lucas\",\"Mariana\",\"Paulo\",\"Camila\",\"Rafael\",\"Juliana\",\"Gustavo\",\"Larissa\",\"Fernando\",\"Amanda\",\"Diego\",\"Isabela\",\"Ricardo\",\"Natália\",\"Henrique\",\"Lívia\",\"Roberto\",\"Sofia\",\"Eduardo\",\"Vitória\",\"Fábio\",\"Mariana\",\"André\",\"Letícia\",\"Rodrigo\",\"Lara\",\"Guilherme\",\"Bianca\",\"Miguel\",\"Alice\",\"Leonardo\",\"Laura\",\"Daniel\",\"Beatriz\",\"Felipe\",\"Luiza\",\"Arthur\",\"Helena\",\"Gabriel\",\"Valentina\",\"Bernardo\",\"Sophia\",\"Vitor\",\"Clara\",\"Francisco\",\"Yasmin\",\"Enzo\",\"Isabel\",\"Isabella\",\"Lorenzo\",\"Joana\",\"Samuel\",\"Melissa\",\"Otávio\",\"Ana\",\"Breno\",\"Cecília\",\"Benjamin\",\"Luana\",\"Mariane\",\"Davi\",\"Nathália\",\"Raul\",\"Isadora\",\"Marcelo\",\"Luna\",\"Nicolas\",\"Laís\",\"Augusto\",\"Stella\",\"Ruan\",\"Gabriela\",\"Luciano\",\"Evelyn\",\"Thiago\",\"Lorena\",\"Vinícius\",\"Catarina\",\"Murilo\",\"Pietra\",\"Tomás\",\"Carolina\",\"Caio\",\"Manuela\",\"Emanuelly\",\"Lavinia\",\"Lucca\",\"Mirella\",\"Kevin\",\"Rebeca\",\"Anthony\",\"Júlia\"];\r",
							"  \r",
							"  const lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\"];\r",
							"\r",
							"const randomfirstName = firstName[Math.floor(Math.random() * firstName.length)];\r",
							"const randomlastName = lastName[Math.floor(Math.random() * lastName.length)];\r",
							"\r",
							"pm.environment.set(\"FirstName\", pm.variables.replaceIn(randomfirstName));\r",
							"pm.environment.set(\"LastName\", pm.variables.replaceIn(randomlastName));\r",
							"pm.environment.set(\"FullName\", pm.variables.replaceIn(randomfirstName + ' ' + randomlastName));\r",
							"\r",
							"// Função para gerar um e-mail aleatório\r",
							"\r",
							"const emailDomain = \"@dominio.com\"; // Você pode alterar o domínio conforme necessário\r",
							"const fullName = pm.environment.get(\"FullName\");\r",
							"\r",
							"// Remover espaços em branco e converter para minúsculas para usar como nome de usuário no e-mail\r",
							"const username = fullName.replace(/\\s+/g, '').toLowerCase();\r",
							"\r",
							"// Concatenar o nome de usuário com o domínio de e-mail\r",
							"const email = username + emailDomain;\r",
							"\r",
							"// Definir o endereço de e-mail na variável de ambiente \"Email\"\r",
							"pm.environment.set(\"Email\", email);\r",
							"\r",
							"// Função para gerar um CPF aleatório válido\r",
							"function generateRandomCPF() {\r",
							"    var cpf = '';\r",
							"    for (var i = 0; i < 9; i++) {\r",
							"        cpf += Math.floor(Math.random() * 10);\r",
							"    }\r",
							"\r",
							"    var sum = 0;\r",
							"    var weight = 10;\r",
							"    for (var i = 0; i < 9; i++) {\r",
							"        sum += parseInt(cpf.charAt(i)) * weight;\r",
							"        weight--;\r",
							"    }\r",
							"\r",
							"    var remainder = 11 - (sum % 11);\r",
							"    if (remainder == 10 || remainder == 11) {\r",
							"        remainder = 0;\r",
							"    }\r",
							"    cpf += remainder;\r",
							"\r",
							"    sum = 0;\r",
							"    weight = 11;\r",
							"    for (var i = 0; i < 10; i++) {\r",
							"        sum += parseInt(cpf.charAt(i)) * weight;\r",
							"        weight--;\r",
							"    }\r",
							"\r",
							"    remainder = 11 - (sum % 11);\r",
							"    if (remainder == 10 || remainder == 11) {\r",
							"        remainder = 0;\r",
							"    }\r",
							"    cpf += remainder;\r",
							"\r",
							"    return cpf;\r",
							"}\r",
							"\r",
							"// Gerar e definir um CPF aleatório na variável de ambiente \"CPF\"\r",
							"pm.environment.set(\"CPF\", generateRandomCPF());\r",
							"\r",
							"// Função para gerar uma senha aleatória\r",
							"function generateRandomPassword(length) {\r",
							"    var chars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+~`|}{[]:;?><,./-=\";\r",
							"    var password = '';\r",
							"    for (var i = 0; i < length; i++) {\r",
							"        password += chars.charAt(Math.floor(Math.random() * chars.length));\r",
							"    }\r",
							"    return password;\r",
							"}\r",
							"\r",
							"// Definir o comprimento desejado da senha\r",
							"var passwordLength = 10; // Você pode ajustar o comprimento conforme necessário\r",
							"\r",
							"// Gerar e definir uma senha aleatória na variável de ambiente \"Password\"\r",
							"pm.environment.set(\"Password\", generateRandomPassword(passwordLength));\r",
							"\r",
							"// Obter a senha gerada anteriormente da variável de ambiente\r",
							"var password = pm.environment.get(\"Password\");\r",
							"\r",
							"// Definir a confirmação de senha igual à senha gerada\r",
							"pm.environment.set(\"ConfirmPassword\", password);\r",
							"\r",
							"// Extrair o id do usuario criado\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', () => {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"confirmPassword\": \"{{ConfirmPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/user/",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"user",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "editar nome usuario",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"   const firstName = [ \"Maria\",\"João\",\"Ana\",\"Pedro\",\"Carla\",\"Lucas\",\"Mariana\",\"Paulo\",\"Camila\",\"Rafael\",\"Juliana\",\"Gustavo\",\"Larissa\",\"Fernando\",\"Amanda\",\"Diego\",\"Isabela\",\"Ricardo\",\"Natália\",\"Henrique\",\"Lívia\",\"Roberto\",\"Sofia\",\"Eduardo\",\"Vitória\",\"Fábio\",\"Mariana\",\"André\",\"Letícia\",\"Rodrigo\",\"Lara\",\"Guilherme\",\"Bianca\",\"Miguel\",\"Alice\",\"Leonardo\",\"Laura\",\"Daniel\",\"Beatriz\",\"Felipe\",\"Luiza\",\"Arthur\",\"Helena\",\"Gabriel\",\"Valentina\",\"Bernardo\",\"Sophia\",\"Vitor\",\"Clara\",\"Francisco\",\"Yasmin\",\"Enzo\",\"Isabel\",\"Isabella\",\"Lorenzo\",\"Joana\",\"Samuel\",\"Melissa\",\"Otávio\",\"Ana\",\"Breno\",\"Cecília\",\"Benjamin\",\"Luana\",\"Mariane\",\"Davi\",\"Nathália\",\"Raul\",\"Isadora\",\"Marcelo\",\"Luna\",\"Nicolas\",\"Laís\",\"Augusto\",\"Stella\",\"Ruan\",\"Gabriela\",\"Luciano\",\"Evelyn\",\"Thiago\",\"Lorena\",\"Vinícius\",\"Catarina\",\"Murilo\",\"Pietra\",\"Tomás\",\"Carolina\",\"Caio\",\"Manuela\",\"Emanuelly\",\"Lavinia\",\"Lucca\",\"Mirella\",\"Kevin\",\"Rebeca\",\"Anthony\",\"Júlia\"];\r",
							"  \r",
							"  const lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\"];\r",
							"\r",
							"const randomfirstName = firstName[Math.floor(Math.random() * firstName.length)];\r",
							"const randomlastName = lastName[Math.floor(Math.random() * lastName.length)];\r",
							"\r",
							"pm.environment.set(\"FirstName\", pm.variables.replaceIn(randomfirstName));\r",
							"pm.environment.set(\"LastName\", pm.variables.replaceIn(randomlastName));\r",
							"pm.environment.set(\"FullName\", pm.variables.replaceIn(randomfirstName + ' ' + randomlastName));\r",
							"\r",
							"// Função para gerar um e-mail aleatório\r",
							"\r",
							"const emailDomain = \"@dominio.com\"; // Você pode alterar o domínio conforme necessário\r",
							"const fullName = pm.environment.get(\"FullName\");\r",
							"\r",
							"// Remover espaços em branco e converter para minúsculas para usar como nome de usuário no e-mail\r",
							"const username = fullName.replace(/\\s+/g, '').toLowerCase();\r",
							"\r",
							"// Concatenar o nome de usuário com o domínio de e-mail\r",
							"const email = username + emailDomain;\r",
							"\r",
							"// Definir o endereço de e-mail na variável de ambiente \"Email\"\r",
							"pm.environment.set(\"Email\", email);\r",
							"\r",
							"// Função para gerar um CPF aleatório válido\r",
							"function generateRandomCPF() {\r",
							"    var cpf = '';\r",
							"    for (var i = 0; i < 9; i++) {\r",
							"        cpf += Math.floor(Math.random() * 10);\r",
							"    }\r",
							"\r",
							"    var sum = 0;\r",
							"    var weight = 10;\r",
							"    for (var i = 0; i < 9; i++) {\r",
							"        sum += parseInt(cpf.charAt(i)) * weight;\r",
							"        weight--;\r",
							"    }\r",
							"\r",
							"    var remainder = 11 - (sum % 11);\r",
							"    if (remainder == 10 || remainder == 11) {\r",
							"        remainder = 0;\r",
							"    }\r",
							"    cpf += remainder;\r",
							"\r",
							"    sum = 0;\r",
							"    weight = 11;\r",
							"    for (var i = 0; i < 10; i++) {\r",
							"        sum += parseInt(cpf.charAt(i)) * weight;\r",
							"        weight--;\r",
							"    }\r",
							"\r",
							"    remainder = 11 - (sum % 11);\r",
							"    if (remainder == 10 || remainder == 11) {\r",
							"        remainder = 0;\r",
							"    }\r",
							"    cpf += remainder;\r",
							"\r",
							"    return cpf;\r",
							"}\r",
							"\r",
							"// Gerar e definir um CPF aleatório na variável de ambiente \"CPF\"\r",
							"pm.environment.set(\"CPF\", generateRandomCPF());\r",
							"\r",
							"// Função para gerar uma senha aleatória\r",
							"function generateRandomPassword(length) {\r",
							"    var chars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+~`|}{[]:;?><,./-=\";\r",
							"    var password = '';\r",
							"    for (var i = 0; i < length; i++) {\r",
							"        password += chars.charAt(Math.floor(Math.random() * chars.length));\r",
							"    }\r",
							"    return password;\r",
							"}\r",
							"\r",
							"// Definir o comprimento desejado da senha\r",
							"var passwordLength = 10; // Você pode ajustar o comprimento conforme necessário\r",
							"\r",
							"// Gerar e definir uma senha aleatória na variável de ambiente \"Password\"\r",
							"pm.environment.set(\"Password\", generateRandomPassword(passwordLength));\r",
							"\r",
							"// Obter a senha gerada anteriormente da variável de ambiente\r",
							"var password = pm.environment.get(\"Password\");\r",
							"\r",
							"// Definir a confirmação de senha igual à senha gerada\r",
							"pm.environment.set(\"ConfirmPassword\", password);\r",
							"\r",
							"// Extrair o id do usuario criado\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', () => {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							" \r",
							"pm.test(\"Verify token is true\", () => {\r",
							"    pm.expect(JSON.parse(responseBody)).to.have.property(\"token_adm\")\r",
							"})\r",
							"\r",
							"pm.globals.set(\"Token_Adm\", JSON.parse(responseBody).token_adm)\r",
							"\r",
							"pm.environment.set(\"Token_Adm\", JSON.parse(responseBody).token_adm);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"fullName\": \"Editar Editado\",\r\n  \"mail\": \"{{Password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/user/{{IdUser}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"user",
						"{{IdUser}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "auth Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.globals.set(\"Token\", JSON.parse(responseBody).token)\r",
							" \r",
							"pm.test('Status code is 200', () => {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							" \r",
							"pm.test(\"Verify token is true\", () => {\r",
							"    pm.expect(JSON.parse(responseBody)).to.have.property(\"token\")\r",
							"})\r",
							"\r",
							"pm.environment.set(\"Token\", JSON.parse(responseBody).token);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"mail\": \"{{mailQaCoders}}\",\r\n  \"password\": \"{{senhaQaCoders}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/login/",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"login",
						""
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "in",
				"value": "query",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{Token}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "token",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}